package com.garijotatiana.atomacademy.gui.Pagos;

import com.garijotatiana.atomacademy.Auxiliar;
import com.garijotatiana.atomacademy.DAO.PagoDAO;
import com.garijotatiana.atomacademy.DAO.impl.PagoDAOImplHiber;
import java.awt.Color;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import com.garijotatiana.atomacademy.model.Pago;
import java.awt.Window;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.SwingUtilities;

/**
 *
 * @author Tatiana
 */
public class panelEditarPago extends javax.swing.JPanel {

    Pago pago;
    PagoDAO pagoDAO = new PagoDAOImplHiber(Pago.class);
    Auxiliar aux = new Auxiliar();

    public panelEditarPago(Pago pago) {
        this.pago = pago;
        initComponents();
        cargarComboAnyo();
        cargarDatosPago();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pDatosPago = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtIDAlumno = new javax.swing.JTextField();
        cmbMes = new javax.swing.JComboBox<>();
        cmbAnyo = new javax.swing.JComboBox<>();
        btLimpiar = new javax.swing.JButton();
        btModificar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtIDPago = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ftxtFechaPago = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        pDatosPago.setBackground(new java.awt.Color(255, 255, 255));
        pDatosPago.setPreferredSize(new java.awt.Dimension(683, 621));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(79, 79, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("ID Alumno:");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(79, 79, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Periodo:");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(79, 79, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Fecha Pago:");

        txtIDAlumno.setEditable(false);
        txtIDAlumno.setBackground(new java.awt.Color(223, 223, 249));
        txtIDAlumno.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        txtIDAlumno.setForeground(new java.awt.Color(102, 102, 102));
        txtIDAlumno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIDAlumno.setActionCommand("<Not Set>");
        txtIDAlumno.setBorder(null);
        txtIDAlumno.setOpaque(true);

        cmbMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ENE", "FEB", "MAR", "ABR", "MAY", "JUN", "JUL", "AGO", "SEP", "OCT", "NOV", "DIC" }));
        cmbMes.setBackground(Color.WHITE);
        cmbMes.setOpaque(true);

        cmbAnyo.setBackground(Color.WHITE);
        cmbAnyo.setOpaque(true);
        cmbAnyo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAnyoActionPerformed(evt);
            }
        });

        btLimpiar.setBackground(new java.awt.Color(140, 166, 219));
        btLimpiar.setFont(new java.awt.Font("Yu Gothic UI", 1, 20)); // NOI18N
        btLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/borrar.png"))); // NOI18N
        btLimpiar.setText(" Limpiar");
        btLimpiar.setBorderPainted(false);
        btLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btLimpiar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btLimpiar.setPreferredSize(new java.awt.Dimension(149, 39));
        btLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiarActionPerformed(evt);
            }
        });

        btModificar.setBackground(new java.awt.Color(140, 166, 219));
        btModificar.setFont(new java.awt.Font("Yu Gothic UI", 1, 20)); // NOI18N
        btModificar.setForeground(new java.awt.Color(255, 255, 255));
        btModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/disquete.png"))); // NOI18N
        btModificar.setText("Modificar");
        btModificar.setBorderPainted(false);
        btModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btModificar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btModificar.setPreferredSize(new java.awt.Dimension(149, 39));
        btModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModificarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(79, 79, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("ID Pago:");

        txtIDPago.setEditable(false);
        txtIDPago.setBackground(new java.awt.Color(223, 223, 249));
        txtIDPago.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        txtIDPago.setForeground(new java.awt.Color(102, 102, 102));
        txtIDPago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIDPago.setActionCommand("<Not Set>");
        txtIDPago.setBorder(null);
        txtIDPago.setOpaque(true);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fecha.png"))); // NOI18N

        ftxtFechaPago.setBackground(new java.awt.Color(242, 242, 242));
        ftxtFechaPago.setBorder(null);
        try {
            ftxtFechaPago.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtFechaPago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(79, 79, 255));
        jLabel14.setText("yyyy-MM-dd");

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(79, 79, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("*");

        javax.swing.GroupLayout pDatosPagoLayout = new javax.swing.GroupLayout(pDatosPago);
        pDatosPago.setLayout(pDatosPagoLayout);
        pDatosPagoLayout.setHorizontalGroup(
            pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDatosPagoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pDatosPagoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))
                    .addGroup(pDatosPagoLayout.createSequentialGroup()
                        .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pDatosPagoLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbMes, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(cmbAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pDatosPagoLayout.createSequentialGroup()
                                .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addGroup(pDatosPagoLayout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(ftxtFechaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10))
                            .addGroup(pDatosPagoLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtIDPago, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pDatosPagoLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtIDAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(63, Short.MAX_VALUE))))
        );
        pDatosPagoLayout.setVerticalGroup(
            pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDatosPagoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtIDPago, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIDAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDatosPagoLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtFechaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel6)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(pDatosPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pDatosPago, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pDatosPago, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiarActionPerformed
        cmbAnyo.setSelectedIndex(0);
        cmbMes.setSelectedIndex(0);
        ftxtFechaPago.setText("");
    }//GEN-LAST:event_btLimpiarActionPerformed

    private void btModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModificarActionPerformed
        List<Pago> listaPagos = pagoDAO.findAll();
        String periodo = (String) cmbMes.getSelectedItem() + cmbAnyo.getSelectedItem();
        String fecha = ftxtFechaPago.getText();
        
        //comprobar que la fecha tiene valor y es un valor válido y dentro de un rango especificado
        if (!fecha.isEmpty() && !fecha.trim().isEmpty()) {
            try {
                LocalDate fechaPago = LocalDate.parse(fecha, DateTimeFormatter.ofPattern("yyyy-MM-dd"));
                boolean fechaValida = validarRangoFecha(fechaPago);
                if (fechaValida) {//si la fecha es válida se guarda el registro
                    int idAlumno = pago.getAlumno().getId();

                    boolean existePeriodo = listaPagos.stream().anyMatch(r -> r.getAlumno().getId().equals(idAlumno) && r.getPeriodo().equals(periodo));
                    if (!existePeriodo) {//comprobar si ya existe un registro del alumno para ese periodo

                        pago.setFecha(fechaPago);
                        pago.setPeriodo(periodo);
                        pagoDAO.update(pago);

                        //cerrar ventana
                        Window parent = SwingUtilities.getWindowAncestor(this);
                        parent.dispose();

                    } else {
                        aux.mostrarMensaje("Ya existe un Registro de Pago para el periodo introducido", "Error", "Error");
                    }
                } else {
                    aux.mostrarMensaje("No se pueden procesar pagos tan antiguos", "Error", "Error");
                }

            } catch (Exception ex) {
                aux.mostrarMensaje("Debe introducir una fecha válida", "Error", "Error");
            }
        } else {
            aux.mostrarMensaje("Debe introducir una fecha", "Error", "Error");
        }
    }//GEN-LAST:event_btModificarActionPerformed

    private void cmbAnyoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAnyoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAnyoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btLimpiar;
    private javax.swing.JButton btModificar;
    private javax.swing.JComboBox<String> cmbAnyo;
    private javax.swing.JComboBox<String> cmbMes;
    private javax.swing.JFormattedTextField ftxtFechaPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel pDatosPago;
    public javax.swing.JTextField txtIDAlumno;
    public javax.swing.JTextField txtIDPago;
    // End of variables declaration//GEN-END:variables

    private void cargarComboAnyo() {
        int anyoActual = LocalDate.now().getYear();
        int anyoPasado = LocalDate.now().minusYears(20).getYear();

        for (int i = anyoActual; i >= anyoPasado; i--) {
            cmbAnyo.addItem(Integer.toString(i));
        }
    }

    private void cargarDatosPago() {
        try {

            String periodo = pago.getPeriodo();
            String mes = periodo.substring(0, periodo.length() - 4);
            String anyo = periodo.substring(periodo.length() - 4);

            txtIDPago.setText(Integer.toString(pago.getId()));
            txtIDAlumno.setText(Integer.toString(pago.getAlumno().getId()));
            ftxtFechaPago.setValue(pago.getFecha());

            cmbMes.setSelectedItem(mes);
            cmbAnyo.setSelectedItem(anyo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error, revise la conexión", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean validarRangoFecha(LocalDate fechaNac) {
        boolean valida;
        LocalDate fechaMax = LocalDate.now().minusYears(70);
        LocalDate fechaMin = LocalDate.now();

        valida = !(fechaNac.isAfter(fechaMin) || fechaNac.isBefore(fechaMax));
        return valida;
    }
}
